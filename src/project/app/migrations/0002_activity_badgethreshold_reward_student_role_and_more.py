# Generated by Django 5.2.1 on 2025-08-09 06:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('tier', models.IntegerField(choices=[(2, 'Tier 2'), (5, 'Tier 5'), (8, 'Tier 8')])),
                ('requires_proof', models.BooleanField(default=False)),
                ('monthly_cap_per_student', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BadgeThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('percent_of_potential', models.PositiveIntegerField(default=60)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('points_cost', models.PositiveIntegerField()),
                ('stock', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='role',
            field=models.CharField(choices=[('student', 'Student'), ('volunteer', 'Volunteer')], default='student', max_length=20),
        ),
        migrations.CreateModel(
            name='EventSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField()),
                ('end_at', models.DateTimeField()),
                ('max_participants', models.PositiveIntegerField()),
                ('registered_count', models.PositiveIntegerField(default=0)),
                ('location', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='slots', to='app.activity')),
            ],
        ),
        migrations.CreateModel(
            name='PointLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('source', models.CharField(choices=[('submission', 'submission'), ('manual', 'manual')], max_length=16)),
                ('reference_id', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_ledger', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('waitlisted', 'Waitlisted'), ('canceled', 'Canceled')], default='registered', max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='app.eventslot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('fulfilled', 'Fulfilled'), ('canceled', 'Canceled')], default='pending', max_length=10)),
                ('fulfilled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fulfilled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fulfillments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to=settings.AUTH_USER_MODEL)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='app.reward')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evidence_url', models.URLField(blank=True)),
                ('evidence_file', models.FileField(blank=True, upload_to='evidence/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submissions', to='app.activity')),
                ('event_slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.eventslot')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='app.student')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='eventslot',
            constraint=models.CheckConstraint(condition=models.Q(('end_at__gt', models.F('start_at'))), name='event_time_valid'),
        ),
        migrations.AddConstraint(
            model_name='eventslot',
            constraint=models.CheckConstraint(condition=models.Q(('registered_count__gte', 0)), name='event_regcnt_nonneg'),
        ),
        migrations.AddIndex(
            model_name='pointledger',
            index=models.Index(fields=['user', 'created_at'], name='app_pointle_user_id_1b0b3c_idx'),
        ),
        migrations.AddConstraint(
            model_name='pointledger',
            constraint=models.UniqueConstraint(fields=('source', 'reference_id'), name='uniq_source_reference'),
        ),
        migrations.AddConstraint(
            model_name='registration',
            constraint=models.UniqueConstraint(fields=('event', 'user'), name='uniq_event_user'),
        ),
    ]
